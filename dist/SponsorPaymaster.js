'use strict';

var ethers = require('ethers');

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_newEntryPoint",
                type: "address",
                internalType: "contract IEntryPoint",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "receive",
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "UPGRADE_INTERFACE_VERSION",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "string",
                internalType: "string",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "addStake",
        inputs: [
            {
                name: "unstakeDelaySec",
                type: "uint32",
                internalType: "uint32",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "addVerifyingSigners",
        inputs: [
            {
                name: "_newVerifyingSigners",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "deposit",
        inputs: [],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "entryPoint",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IEntryPoint",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAllSigners",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getDeposit",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getDepositInfo",
        inputs: [],
        outputs: [
            {
                name: "info",
                type: "tuple",
                internalType: "struct IStakeManager.DepositInfo",
                components: [
                    {
                        name: "deposit",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "staked",
                        type: "bool",
                        internalType: "bool",
                    },
                    {
                        name: "stake",
                        type: "uint112",
                        internalType: "uint112",
                    },
                    {
                        name: "unstakeDelaySec",
                        type: "uint32",
                        internalType: "uint32",
                    },
                    {
                        name: "withdrawTime",
                        type: "uint48",
                        internalType: "uint48",
                    },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getHash",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    {
                        name: "sender",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "initCode",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "accountGasLimits",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "preVerificationGas",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "gasFees",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "paymasterAndData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "signature",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
            {
                name: "validUntil",
                type: "uint48",
                internalType: "uint48",
            },
            {
                name: "validAfter",
                type: "uint48",
                internalType: "uint48",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            {
                name: "_newOwner",
                type: "address",
                internalType: "address",
            },
            {
                name: "_verifyingSigners",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "parsePaymasterAndData",
        inputs: [
            {
                name: "paymasterAndData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "validUntil",
                type: "uint48",
                internalType: "uint48",
            },
            {
                name: "validAfter",
                type: "uint48",
                internalType: "uint48",
            },
            {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "pause",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "paused",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "postOp",
        inputs: [
            {
                name: "mode",
                type: "uint8",
                internalType: "enum IPaymaster.PostOpMode",
            },
            {
                name: "context",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "actualGasCost",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "actualUserOpFeePerGas",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "proxiableUUID",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "removeVerifyingSigners",
        inputs: [
            {
                name: "_verifyingSigners",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "renounceOwnership",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unlockStake",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unpause",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "upgradeToAndCall",
        inputs: [
            {
                name: "newImplementation",
                type: "address",
                internalType: "address",
            },
            {
                name: "data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "validatePaymasterUserOp",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    {
                        name: "sender",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "initCode",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "accountGasLimits",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "preVerificationGas",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "gasFees",
                        type: "bytes32",
                        internalType: "bytes32",
                    },
                    {
                        name: "paymasterAndData",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "signature",
                        type: "bytes",
                        internalType: "bytes",
                    },
                ],
            },
            {
                name: "userOpHash",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "maxCost",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "context",
                type: "bytes",
                internalType: "bytes",
            },
            {
                name: "validationData",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawStake",
        inputs: [
            {
                name: "withdrawAddress",
                type: "address",
                internalType: "address payable",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawTo",
        inputs: [
            {
                name: "withdrawAddress",
                type: "address",
                internalType: "address payable",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "Initialized",
        inputs: [
            {
                name: "version",
                type: "uint64",
                indexed: false,
                internalType: "uint64",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Paused",
        inputs: [
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Unpaused",
        inputs: [
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Upgraded",
        inputs: [
            {
                name: "implementation",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AddressEmptyCode",
        inputs: [
            {
                name: "target",
                type: "address",
                internalType: "address",
            },
        ],
    },
    {
        type: "error",
        name: "ERC1967InvalidImplementation",
        inputs: [
            {
                name: "implementation",
                type: "address",
                internalType: "address",
            },
        ],
    },
    {
        type: "error",
        name: "ERC1967NonPayable",
        inputs: [],
    },
    {
        type: "error",
        name: "EnforcedPause",
        inputs: [],
    },
    {
        type: "error",
        name: "ExpectedPause",
        inputs: [],
    },
    {
        type: "error",
        name: "FailedInnerCall",
        inputs: [],
    },
    {
        type: "error",
        name: "InvalidInitialization",
        inputs: [],
    },
    {
        type: "error",
        name: "NotInitializing",
        inputs: [],
    },
    {
        type: "error",
        name: "OwnableInvalidOwner",
        inputs: [
            {
                name: "owner",
                type: "address",
                internalType: "address",
            },
        ],
    },
    {
        type: "error",
        name: "OwnableUnauthorizedAccount",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address",
            },
        ],
    },
    {
        type: "error",
        name: "UUPSUnauthorizedCallContext",
        inputs: [],
    },
    {
        type: "error",
        name: "UUPSUnsupportedProxiableUUID",
        inputs: [
            {
                name: "slot",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
    },
    {
        type: "error",
        name: "VerifyingSignerAlreadyExists",
        inputs: [
            {
                name: "verifyingSigner",
                type: "address",
                internalType: "address",
            },
        ],
    },
    {
        type: "error",
        name: "VerifyingSignerDoesNotExist",
        inputs: [
            {
                name: "verifyingSigner",
                type: "address",
                internalType: "address",
            },
        ],
    },
];
const _bytecode = "0x60c034620000d057601f62001d1138819003918201601f19168301916001600160401b03831184841017620000d557808492602094604052833981010312620000d057516001600160a01b0381168103620000d0573060805260a05262000065620000eb565b6200006f620000eb565b604051611b8690816200018b82396080518181816105a50152610796015260a0518181816101f7015281816102bc01528181610a3601528181610d8901528181610ddd01528181610e6d01528181610ef20152818161137801526114f20152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805460ff8160401c1662000178576001600160401b036002600160401b0319828216016200013957505050565b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b60405163f92ee8a960e01b8152600490fdfe60806040526004361015610023575b361561001957600080fd5b610021611364565b005b60003560e01c80630396cb60146101b3578063205c2878146101ae5780633f4ba83a146101a957806343e3b518146101a45780634f1ef2861461019f57806352b7512c1461019a57806352d1902d146101955780635829c5f5146101905780635c975abb1461018b578063715018a6146101865780637c627b21146101815780638456cb591461017c5780638969e0f9146101775780638da5cb5b14610172578063946d92041461016d57806394d4ad6014610168578063ad3cb1cc14610163578063b0d691fe1461015e578063bb9fe6bf14610159578063c23a5cea14610154578063c399ec881461014f578063d0e30db01461014a578063d42f2f3514610145578063d88c13e0146101405763f2fde38b0361000e576110d6565b611046565b610f88565b610f6c565b610ec5565b610e34565b610db8565b610d73565b610d1b565b610c79565b610b2f565b610af9565b6109dd565b61096e565b610921565b610889565b610859565b6107fe565b610783565b61071a565b610552565b6103ea565b610320565b610283565b6101cb565b63ffffffff8116036101c657565b600080fd5b6000602036600319011261026f576004356101e5816101b8565b6101ed611451565b6101f561148a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908290823b1561026b57602463ffffffff916040519485938492621cb65b60e51b845216600483015234905af180156102665761025a575080f35b61026390610490565b80f35b611103565b5080fd5b80fd5b6001600160a01b038116036101c657565b346101c6576000604036600319011261026f576004356102a281610272565b6102aa611451565b6102b261148a565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b1561031c5760449083604051958694859363040b850f60e31b855216600484015260243560248401525af180156102665761025a575080f35b8280fd5b346101c65760003660031901126101c657610339611451565b6103416114b5565b6103496114b5565b600080516020611b1183398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b9181601f840112156101c6578235916001600160401b0383116101c6576020808501948460051b0101116101c657565b60206003198201126101c657600435906001600160401b0382116101c6576103e69160040161038c565b9091565b346101c6576103f8366103bc565b90610401611451565b61040961148a565b60005b82811061041557005b610420818484611125565b3561042a81610272565b6001600160a01b039061043e9082166116d4565b1561044c575060010161040c565b6104596024928585611125565b359061046482610272565b604051630a07962b60e11b815291166004820152fd5b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116104a357604052565b61047a565b60a081019081106001600160401b038211176104a357604052565b61010081019081106001600160401b038211176104a357604052565b90601f801991011681019081106001600160401b038211176104a357604052565b6001600160401b0381116104a357601f01601f191660200190565b92919261052782610500565b9161053560405193846104df565b8294818452818301116101c6578281602093846000960137010152565b60403660031901126101c657600480359061056c82610272565b6024356001600160401b0381116101c657366023820112156101c65761059b903690602481850135910161051b565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156106af575b5061069e5790602083926105e3611451565b6040516352d1902d60e01b8152938491829088165afa6000928161066d575b50610630575050604051634c9c8ce360e01b81526001600160a01b0390921690820190815281906020010390fd5b8383600080516020611af1833981519152840361065157610021838361174b565b604051632a87526960e21b815290810184815281906020010390fd5b61069091935060203d602011610697575b61068881836104df565b8101906114e1565b9138610602565b503d61067e565b60405163703e46dd60e11b81528390fd5b905081600080516020611af183398151915254161415386105d1565b90816101209103126101c65790565b919082519283825260005b848110610706575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016106e5565b346101c65760603660031901126101c6576004356001600160401b0381116101c6576107656107506107799236906004016106cb565b61075861148a565b6107606114f0565b611591565b6040519283926040845260408401906106da565b9060208301520390f35b346101c65760003660031901126101c6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036107dc576020604051600080516020611af18339815191528152f35b60405163703e46dd60e11b8152600490fd5b65ffffffffffff8116036101c657565b346101c65760603660031901126101c6576004356001600160401b0381116101c65761085161083360209236906004016106cb565b60243561083f816107ee565b6044359161084c836107ee565b611181565b604051908152f35b346101c65760003660031901126101c657602060ff600080516020611b1183398151915254166040519015158152f35b346101c65760008060031936011261026f576108a3611451565b600080516020611ad183398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b9181601f840112156101c6578235916001600160401b0383116101c657602083818601950101116101c657565b346101c65760803660031901126101c657600360043510156101c6576024356001600160401b0381116101c65761095c9036906004016108f4565b505061096661148a565b6100216114f0565b346101c65760003660031901126101c657610987611451565b61098f61148a565b61099761148a565b600080516020611b11833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346101c65760008060031936011261026f578060806040516109fe816104a8565b8281526020810183905260408082018490526060820184905291019190915251632943e70960e11b815230600482015260a0816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561026657610ac69291610aca575b5060405191829182919091608065ffffffffffff8160a0840195805185526020810151151560208601526001600160701b03604082015116604086015263ffffffff6060820151166060860152015116910152565b0390f35b610aec915060a03d60a011610af2575b610ae481836104df565b81019061122c565b38610a71565b503d610ada565b346101c65760003660031901126101c657600080516020611ad1833981519152546040516001600160a01b039091168152602090f35b346101c65760403660031901126101c657600435610b4c81610272565b6001600160401b03906024358281116101c657610b6d90369060040161038c565b90600080516020611b31833981519152549360ff8560401c1615941680159081610c71575b6001149081610c67575b159081610c5e575b50610c4c57600080516020611b31833981519152805467ffffffffffffffff19166001179055610bd89284610c275761129f565b610bde57005b600080516020611b31833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020611b31833981519152805460ff60401b1916600160401b17905561129f565b60405163f92ee8a960e01b8152600490fd5b90501538610ba4565b303b159150610b9c565b859150610b92565b346101c65760203660031901126101c6576004356001600160401b0381116101c657610cb4610cae60809236906004016108f4565b90611330565b809160409594955195869465ffffffffffff809216865216602085015260606040850152816060850152848401376000828201840152601f01601f19168101030190f35b60405190602082018281106001600160401b038211176104a35760405260008252565b346101c65760003660031901126101c65760405160408101908082106001600160401b038311176104a357610ac69160405260058152640352e302e360dc1b60208201526040519182916020835260208301906106da565b346101c65760003660031901126101c6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101c65760008060031936011261026f57610dd2611451565b610dda61148a565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610e3157819060046040518094819363bb9fe6bf60e01b83525af180156102665761025a575080f35b50fd5b346101c6576000602036600319011261026f57600435610e5381610272565b610e5b611451565b610e6361148a565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b1561031c5760249083604051958694859363611d2e7560e11b85521660048401525af180156102665761025a575080f35b346101c65760008060031936011261026f576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610266578291610f35575b604051828152602090f35b90506020813d602011610f64575b81610f50602093836104df565b8101031261026b57610ac691505138610f2a565b3d9150610f43565b60003660031901126101c657610f8061148a565b610021611376565b346101c65760008060031936011261026f5760405180916032549081835260208093018092603283527f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff69790835b8181106110325750505084610feb9103856104df565b60405193838594850191818652518092526040850193925b82811061101257505050500390f35b83516001600160a01b031685528695509381019392810192600101611003565b825484529286019260019283019201610fd5565b346101c657611054366103bc565b9061105d611451565b61106561148a565b60005b82811061107157005b61107c818484611125565b3561108681610272565b6001600160a01b039061109a9082166118de565b156110a85750600101611068565b6110b56024928585611125565b35906110c082610272565b60405163281c4e0360e11b815291166004820152fd5b346101c65760203660031901126101c6576100216004356110f681610272565b6110fe611451565b6113dd565b6040513d6000823e3d90fd5b634e487b7160e01b600052603260045260246000fd5b91908110156111355760051b0190565b61110f565b949261115560a095929897939860c0885260c08801906106da565b976020870152600180861b03166040860152606085015265ffffffffffff809216608085015216910152565b9161122690611218602085013591604060c061119f8289018961155f565b9081845191823720976111b5606082018261155f565b908185519182372083519960018060a01b0383351660208c015287858c015260608b015260808a0152608081013560a08a015260a0810135828a0152013560e088015260e08752611205876104c3565b519485936020850197309046908a61113a565b03601f1981018352826104df565b51902090565b908160a09103126101c65760405190611244826104a8565b80518252602081015180151581036101c65760208301526040810151906001600160701b03821682036101c65760809160408401526060810151611287816101b8565b60608401520151611297816107ee565b608082015290565b6112c3906112ab61182e565b6112b361182e565b6112bb61182e565b6110fe61182e565b6112cb61182e565b6112d361182e565b600080516020611b11833981519152805460ff1916905560005b8281106112f957505050565b611304818484611125565b3561130e81610272565b6001600160a01b03906113229082166116d4565b1561044c57506001016112ed565b9190806074116101c657603483013591611349836107ee565b60746054850135611359816107ee565b939401916073190190565b61136c61148a565b611374611376565b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101c65760006024916040519283809263b760faf960e01b825230600483015234905af18015610266576113d45750565b61137490610490565b6001600160a01b0390811690811561143857600080516020611ad183398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020611ad1833981519152546001600160a01b0316330361147257565b60405163118cdaa760e01b8152336004820152602490fd5b60ff600080516020611b1183398151915254166114a357565b60405163d93c066560e01b8152600490fd5b60ff600080516020611b118339815191525416156114cf57565b604051638dfc202b60e01b8152600490fd5b908160209103126101c6575190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361152257565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b903590601e19813603018212156101c657018035906001600160401b0382116101c6576020019181360383136101c657565b6115c06115ba916115f36115ab610cae60e084018461155f565b9683979183979492369161051b565b94611181565b916000927f19457468657265756d205369676e6564204d6573736167653a0a3332000000008452601c52603c83206117f2565b50600481939293101561168957159182159261166a575b50506116405760a09190911b65ffffffffffff60a01b1660d09190911b6001600160d01b031916175b9061163c610cf8565b9190565b60a09190911b65ffffffffffff60a01b1660d09190911b6001600160d01b03191617600117611633565b6001600160a01b0316815260336020526040902054159050388061160a565b634e487b7160e01b82526021600452602482fd5b6032548110156111355760326000527f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff6970190600090565b8060005260336020526040600020541560001461174557603254600160401b8110156104a35760018101806032558110156111355781907f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff6970155603254906000526033602052604060002055600190565b50600090565b90813b156117d157600080516020611af183398151915280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051156117b6576117b3916119a0565b50565b5050346117bf57565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b81519190604183036118235761181c92506020820151906060604084015193015160001a906119e9565b9192909190565b505060009160029190565b60ff600080516020611b318339815191525460401c161561184b57565b604051631afcd79f60e31b8152600490fd5b60001981019190821161186c57565b634e487b7160e01b600052601160045260246000fd5b60325480156118c85760001981019080821015611135577f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff696600091603283520155603255565b634e487b7160e01b600052603160045260246000fd5b600081815260336020526040812054909190801561199b5760001981018181116119875790611937929161191360325461185d565b9081810361193d575b505050611927611882565b6000526033602052604060002090565b55600190565b6119276119659161195d61195361197e9561169d565b90549060031b1c90565b92839161169d565b90919082549060031b91821b91600019901b1916179055565b5538808061191c565b634e487b7160e01b84526011600452602484fd5b505090565b6000806119de93602081519101845af43d156119e1573d916119c183610500565b926119cf60405194856104df565b83523d6000602085013e611a6d565b90565b606091611a6d565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611a6157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156102665780516001600160a01b03811615611a5857918190565b50809160019190565b50505060009160039190565b90611a945750805115611a8257805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611ac7575b611aa5575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611a9d56fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220155a5ce7d01b92aa13115f5f160cb39781875524e1390fff8464965796bb92f164736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class SponsorPaymaster__factory extends ethers.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_newEntryPoint, overrides) {
        return super.deploy(_newEntryPoint, overrides || {});
    }
    getDeployTransaction(_newEntryPoint, overrides) {
        return super.getDeployTransaction(_newEntryPoint, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers.Contract(address, _abi, signerOrProvider);
    }
}
SponsorPaymaster__factory.bytecode = _bytecode;
SponsorPaymaster__factory.abi = _abi;

exports.SponsorPaymaster__factory = SponsorPaymaster__factory;
